---
import type { Language } from '$i18n/utils';
import { indexTranslations } from '$i18n/translations';
import { type ImageMetadata } from 'astro';
import { Image } from 'astro:assets';
import LogoGithub from 'svelte-ionicons/LogoGithub.svelte';
import GlobeOutline from 'svelte-ionicons/GlobeOutline.svelte';
import { useTranslations } from '$i18n/utils';
import ProjectCardLink from './ProjectCardLink.astro';

interface Props {
    title: string;
    description: string;
    preview: ImageMetadata;
    url?: string;
    github?: string;
    tech?: [ ImageMetadata, string ][];
}

const {
    title,
    description,
    preview,
    url,
    github,
    tech = [],
} = Astro.props;

const language = Astro.currentLocale as Language;
const t = useTranslations(indexTranslations, language);
---


<div class="project-card">
    <div class="tech-row">
        {tech.map(([ icon, name ]) => (
                <div class="tech-badge">
                    <Image src={icon} alt={name} class="tech-icon"/>
                    <div>{name}</div>
                </div>
        ))}
    </div>

    <Image src={preview}
           alt={title}
           width={preview.width / 2.5}
           densities={[ 1.5, 2, 2.5 ]}
           class="project-preview"/>

    <div class="project-info">
        <h3>{title}</h3>
        <p>{description}</p>
    </div>

    {url || github
        ?
            <div class="project-links">
                {url ?
                        <ProjectCardLink url={url} icon={GlobeOutline}>
                            {t('projects.website')}
                        </ProjectCardLink>
                    : null}
                {github ?
                        <ProjectCardLink url={github} icon={LogoGithub}>
                            {t('projects.source-code')}
                        </ProjectCardLink>
                    : null}
            </div>
        : null
    }
</div>


<style>
    .project-card {
        display: flex;
        position: relative;
        flex-direction: column;
        align-items: start;
        justify-content: start;
        gap: 1rem;
        max-width: 30rem;
        padding: 1rem;
        border-radius: 1rem;
        background-color: var(--card-background-color);
        backdrop-filter: blur(1rem);
        box-shadow: var(--box-shadow);
    }

    .tech-row {
        display: flex;
        gap: .25rem;
        justify-content: end;
        width: 100%;
        position: absolute;
        top: -.5rem;
        right: -.5rem;
        z-index: 3;
    }

    .tech-badge {
        background-color: var(--background-color);
        border-radius: 1rem;
        padding: .25rem;
        display: flex;
        align-items: center;
        justify-content: start;
        gap: .25rem;
        height: 1.5rem;
        max-width: 1.5rem;
        overflow: clip;
        transition: max-width .25s linear;
        box-shadow: var(--box-shadow);
    }

    .tech-badge:hover {
        max-width: 10rem;
        transition: max-width .25s linear;
    }

    .tech-badge div {
        cursor: none;
        padding-right: .25rem;
        white-space: nowrap;
    }

    .tech-icon {
        height: 100%;
        width: auto;
        border-radius: .25rem;
    }

    .project-preview {
        width: 100%;
        height: auto;
        border-radius: .5rem;
    }

    .project-info {
        display: flex;
        flex-direction: column;
        align-items: start;
        justify-content: center;
        gap: .5rem;
    }

    .project-info * {
        margin: 0;
    }

    .project-links {
        display: flex;
        gap: 1rem;
    }
</style>
